name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ akash3103 }}
          password: ${{ Akash@31 }}

      # Step 4: Build the Docker images for frontend and backend
      - name: Build backend Docker image
        run: |
          docker build -t ${{ akash3103 }}/backend:$GITHUB_SHA -f backend/Dockerfile .

      - name: Build frontend Docker image
        run: |
          docker build -t ${{ akash3103 }}/frontend:$GITHUB_SHA -f frontend/Dockerfile .

      # Step 5: Push the images to Docker Hub
      - name: Push backend image to Docker Hub
        run: |
          docker push ${{ akash3103 }}/backend:$GITHUB_SHA

      - name: Push frontend image to Docker Hub
        run: |
          docker push ${{ akash3103 }}/frontend:$GITHUB_SHA

      # Step 6: Set up Kubeconfig for Kubernetes
      - name: Set up Kubeconfig
        uses: azure/setup-kubectl@v2
        with:
          kubeconfig: ${{ secrets.KUBECONFIG }}

      # Step 7: Deploy to Kubernetes (Both backend and frontend)
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/backend-deployment.yaml
          kubectl apply -f k8s/frontend-deployment.yaml
          kubectl apply -f k8s/backend-service.yaml
          kubectl apply -f k8s/frontend-service.yaml

      # Optional: Verify Deployment
      - name: Verify Deployment
        run: |
          kubectl get pods
          kubectl get services
